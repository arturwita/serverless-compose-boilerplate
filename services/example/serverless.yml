service: ${env:EXAMPLE_SERVICE_APP_NAME}
useDotenv: true
plugins:
  - serverless-step-functions-local
  - serverless-step-functions
  - serverless-webpack
  - serverless-offline
  - serverless-plugin-log-retention

package: ${file(../common.yml):package}

custom:
  logRetentionInDays: ${file(../common.yml):logRetentionInDays}
  webpack: ${file(../common.yml):webpack}
  stepFunctionsLocal:
    externalInstance: true
    accountId: 101010101010
    region: us-east-1
    stepFunctionsEndpoint: http://localhost:8084
    prefix: arn:aws:lambda:${self:custom.stepFunctionsLocal.region}:${self:custom.stepFunctionsLocal.accountId}:function:${self:service}-${self:provider.stage}
    TaskResourceMapping:
      exampleStep: ${self:custom.stepFunctionsLocal.prefix}-example-step-lambda
      # PLOP_ADD_WORKFLOW_STEP_LOCAL_STEP

provider:
  name: ${file(../common.yml):providerName}
  runtime: ${file(../common.yml):runtime}
  region: ${file(../common.yml):region}
  stage: ${file(../common.yml):stage}
  memorySize: ${file(../common.yml):memorySize}
  timeout: ${file(../common.yml):timeout}
  environment:
    APP_NAME: ${env:EXAMPLE_SERVICE_APP_NAME}
    AWS_LAMBDAS_REGION: ${env:AWS_LAMBDAS_REGION, 'eu-west-1'}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - ec2:CreateNetworkInterface
            - ec2:DescribeNetworkInterfaces
            - ec2:DeleteNetworkInterface
            - ec2:DetachNetworkInterface
          Resource: "*"
        - Effect: Allow
          Action:
            - lambda:InvokeFunction
            - states:StartExecution
          Resource:
            - "*"

functions:
  - ${file(functions/example-lambda/function.yml)}
  - ${file(workflows/example-workflow/example-step/function.yml)}
  # PLOP_ADD_LAMBDA

stepFunctions:
  stateMachines:
    ExampleWorkflow: ${file(workflows/example-workflow/workflow.yml)}
  # PLOP_ADD_WORKFLOW_STATE_MACHINE

resources:
  Outputs:
    ExampleWorkflowStateMachine:
      Description: Example workflow state machine Arn
      Value:
        Ref: ${self:service}${self:provider.stage}ExampleWorkflow
    # PLOP_ADD_WORKFLOW_RESOURCE
